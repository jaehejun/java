Java의 **입출력(I/O) 구조**는 크게 다음과 같이 나눌 수 있습니다:

---

## ✅ 자바 I/O 전체 흐름도

```
                 [입출력 대상]
   ┌──────────┬───────────────┬───────────────┐
   │   파일   │     콘솔      │   네트워크    │
   └────┬─────┴─────┬─────────┴──────┬────────┘
        │           │                │
        ▼           ▼                ▼
   FileInputStream / OutputStream     Socket.getInput/OutputStream()
   FileReader / FileWriter

────────────────────────────────────────────────────────────
           [1] 바이트 기반 (1 byte 단위 처리, 이미지/동영상 등)
────────────────────────────────────────────────────────────
┌────────────────────────┐
│     InputStream        │<─── 읽기용
│   (바이트 입력 스트림)  │
└─────┬──────────────────┘
      ▼
  FileInputStream
  BufferedInputStream
  DataInputStream
  ObjectInputStream
  ...

┌────────────────────────┐
│    OutputStream        │<─── 쓰기용
│  (바이트 출력 스트림)   │
└─────┬──────────────────┘
      ▼
  FileOutputStream
  BufferedOutputStream
  DataOutputStream
  ObjectOutputStream
  ...

────────────────────────────────────────────────────────────
           [2] 문자 기반 (2 byte 단위 처리, 텍스트)
────────────────────────────────────────────────────────────
┌────────────────────────┐
│     Reader             │<─── 읽기용
│  (문자 입력 스트림)     │
└─────┬──────────────────┘
      ▼
  FileReader
  BufferedReader
  InputStreamReader ← 바이트 → 문자 변환
  ...

┌────────────────────────┐
│     Writer             │<─── 쓰기용
│  (문자 출력 스트림)     │
└─────┬──────────────────┘
      ▼
  FileWriter
  BufferedWriter
  OutputStreamWriter ← 문자 → 바이트 변환
  PrintWriter
  ...

────────────────────────────────────────────────────────────
     [3] 문자 ↔ 바이트 변환 브리지 스트림 (Reader/Writer와 Stream 연결)
────────────────────────────────────────────────────────────

  InputStreamReader(InputStream)
  → 바이트 입력 → 문자로 변환 (예: 소켓 입력 받기)

  OutputStreamWriter(OutputStream)
  → 문자 출력 → 바이트로 변환 (예: 소켓에 출력)

────────────────────────────────────────────────────────────

## 🔄 네트워크 입출력 예시 흐름도 (Buffered 포함)

### 수신(클라이언트로부터 입력)
```

Socket socket = serverSocket.accept();
InputStream byteIn = socket.getInputStream();
Reader charIn = new InputStreamReader(byteIn, "UTF-8");
BufferedReader in = new BufferedReader(charIn);

```

### 송신(클라이언트에게 출력)
```

OutputStream byteOut = socket.getOutputStream();
Writer charOut = new OutputStreamWriter(byteOut, "UTF-8");
PrintWriter out = new PrintWriter(charOut, true); // autoFlush

```

---

## 🧠 핵심 정리

| 분류         | 클래스 예시                | 특징                                 |
|--------------|----------------------------|--------------------------------------|
| 바이트 스트림 | InputStream / OutputStream | 바이너리(이미지, 동영상) 처리        |
| 문자 스트림   | Reader / Writer            | 문자 데이터 처리                      |
| 보조 스트림   | BufferedXXX / DataXXX      | 성능 향상, 기본형 처리 등 추가 기능 |
| 변환 스트림   | InputStreamReader          | 바이트 → 문자                        |
| 변환 스트림   | OutputStreamWriter         | 문자 → 바이트                        |

---

원하는 구조에 맞게 **PDF나 PPT용 시각자료로도 변환해드릴 수** 있어요. 필요하시면 말씀해주세요!
```
